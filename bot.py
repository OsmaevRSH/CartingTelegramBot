import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from parsers import ArchiveParser, RaceParser
from models import ParsingError

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

try:
    from config import BOT_TOKEN
except ImportError:
    print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª config.py!")
    print("–°–æ–∑–¥–∞–π —Ñ–∞–π–ª config.py –Ω–∞ –æ—Å–Ω–æ–≤–µ config.py.example")
    exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä—ã
archive_parser = ArchiveParser()
race_parser = RaceParser()


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∫–∞—Ä—Ç–∏–Ω–≥–∞.\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/ping - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã\n"
        "/archive - –ø–æ–ª—É—á–∏—Ç—å –∞—Ä—Ö–∏–≤ –∑–∞–µ–∑–¥–æ–≤\n"
        "/help - –ø–æ–º–æ—â—å"
    )


async def ping_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ping"""
    await update.message.reply_text("pong")


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üèÅ –ë–æ—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∫–∞—Ä—Ç–∏–Ω–≥–∞

–ö–æ–º–∞–Ω–¥—ã:
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/ping - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã
/archive - –ø–æ–ª—É—á–∏—Ç—å –∞—Ä—Ö–∏–≤ –∑–∞–µ–∑–¥–æ–≤
/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É –ø–æ–º–æ—â—å

–ë–æ—Ç –ø–∞—Ä—Å–∏—Ç –¥–∞–Ω–Ω—ã–µ —Å —Å–∞–π—Ç–∞ mayak.kartchrono.com
    """
    await update.message.reply_text(help_text)


async def archive_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /archive"""
    try:
        await update.message.reply_text("üîÑ –ü–∞—Ä—Å—é –∞—Ä—Ö–∏–≤ –∑–∞–µ–∑–¥–æ–≤...")
        
        day_races = await archive_parser.parse()
        
        if not day_races:
            await update.message.reply_text("‚ùå –ê—Ä—Ö–∏–≤ –ø—É—Å—Ç")
            return
        
        response = "üìÖ –ê—Ä—Ö–∏–≤ –∑–∞–µ–∑–¥–æ–≤:\n\n"
        for day_race in day_races[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5 –¥–∞—Ç
            date_str = day_race.date.strftime("%d.%m.%Y")
            response += f"üìÖ {date_str}\n"
            
            for race in day_race.races[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 –∑–∞–µ–∑–¥–∞
                response += f"  üèéÔ∏è –ó–∞–µ–∑–¥ {race.number}\n"
            
            if len(day_race.races) > 3:
                response += f"  ... –∏ –µ—â–µ {len(day_race.races) - 3} –∑–∞–µ–∑–¥–æ–≤\n"
            
            response += "\n"
        
        if len(day_races) > 5:
            response += f"... –∏ –µ—â–µ {len(day_races) - 5} –¥–∞—Ç"
        
        await update.message.reply_text(response)
        
    except ParsingError as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        await update.message.reply_text(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    await update.message.reply_text(
        "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥."
    )


async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(msg="Exception while handling an update:", exc_info=context.error)


def main() -> None:
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("ping", ping_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("archive", archive_command))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    application.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == "__main__":
    main() 