#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è CartingBot –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (Docker)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

function colored_echo() {
    echo -e "${2}${1}${NC}"
}

function check_docker() {
    if ! command -v docker-compose &> /dev/null; then
        colored_echo "‚ùå docker-compose –Ω–µ –Ω–∞–π–¥–µ–Ω" $RED
        exit 1
    fi
}

function show_help() {
    colored_echo "ü§ñ CartingBot - –£–¥–∞–ª–µ–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (Docker)" $GREEN
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./manage_remote.sh [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start        - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "  stop         - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
    echo "  restart      - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "  status       - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"
    echo "  logs         - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±–æ—Ç–∞"
    echo "  logs-f       - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "  update       - –û–±–Ω–æ–≤–∏—Ç—å –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "  shell        - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–æ—Ç–∞"
    echo "  clean        - –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    echo "  backup       - –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo "  clear-db     - –û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
    echo "  check-perm   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"
    echo "  health       - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã"
    echo "  help         - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
}

function start_bot() {
    colored_echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞..." $BLUE
    cd deployment
    docker-compose up -d
    if [ $? -eq 0 ]; then
        colored_echo "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!" $GREEN
    else
        colored_echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞" $RED
    fi
    cd ..
}

function stop_bot() {
    colored_echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –±–æ—Ç–∞..." $BLUE
    cd deployment
    docker-compose down
    if [ $? -eq 0 ]; then
        colored_echo "‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!" $GREEN
    else
        colored_echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞" $RED
    fi
    cd ..
}

function restart_bot() {
    colored_echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞..." $BLUE
    cd deployment
    docker-compose restart
    if [ $? -eq 0 ]; then
        colored_echo "‚úÖ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!" $GREEN
    else
        colored_echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞" $RED
    fi
    cd ..
}

function show_status() {
    colored_echo "üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:" $BLUE
    cd deployment
    docker-compose ps
    cd ..
}

function show_logs() {
    colored_echo "üìù –õ–æ–≥–∏ –±–æ—Ç–∞:" $BLUE
    cd deployment
    docker-compose logs --tail=50
    cd ..
}

function show_logs_follow() {
    colored_echo "üìù –õ–æ–≥–∏ –±–æ—Ç–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏):" $BLUE
    cd deployment
    docker-compose logs -f
    cd ..
}

function update_bot() {
    colored_echo "üîÑ –û–±–Ω–æ–≤–ª—è—é –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞..." $BLUE
    cd deployment
    docker-compose down
    docker-compose up -d --build
    if [ $? -eq 0 ]; then
        colored_echo "‚úÖ –ë–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!" $GREEN
    else
        colored_echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞" $RED
    fi
    cd ..
}

function shell_bot() {
    colored_echo "üêö –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–æ—Ç–∞..." $BLUE
    cd deployment
    docker-compose exec carting-bot bash
    cd ..
}

function clean_bot() {
    colored_echo "‚ö†Ô∏è  –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." $YELLOW
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã! (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        cd deployment
        docker-compose down -v --remove-orphans
        docker system prune -f
        cd ..
        rm -rf data logs
        colored_echo "‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã!" $GREEN
    else
        colored_echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ" $YELLOW
    fi
}

function backup_bot() {
    colored_echo "üíæ –°–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." $BLUE
    if [ -f "data/races.db" ]; then
        backup_file="backups/races_backup_$(date +%Y%m%d_%H%M%S).db"
        mkdir -p backups
        cp data/races.db "$backup_file"
        colored_echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $backup_file" $GREEN
    else
        colored_echo "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!" $RED
    fi
}

function clear_database() {
    colored_echo "üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." $BLUE
    cd deployment
    docker-compose exec carting-bot python utils/clear_database.py
    cd ..
}

function check_permissions() {
    colored_echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..." $BLUE
    cd deployment
    docker-compose exec carting-bot python utils/check_permissions.py
    cd ..
}

function health_check() {
    colored_echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã..." $BLUE
    cd deployment
    docker-compose exec carting-bot python utils/health_check.py
    cd ..
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose
check_docker

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-help}" in
    start)
        start_bot
        ;;
    stop)
        stop_bot
        ;;
    restart)
        restart_bot
        ;;
    status)
        show_status
        ;;
    logs)
        show_logs
        ;;
    logs-f)
        show_logs_follow
        ;;
    update)
        update_bot
        ;;
    shell)
        shell_bot
        ;;
    clean)
        clean_bot
        ;;
    backup)
        backup_bot
        ;;
    clear-db)
        clear_database
        ;;
    check-perm)
        check_permissions
        ;;
    health)
        health_check
        ;;
    help)
        show_help
        ;;
    *)
        colored_echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1" $RED
        show_help
        exit 1
        ;;
esac