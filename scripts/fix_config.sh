#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π

set -e

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π CartingBot..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "main.py" ]; then
    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω main.py. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º config/__init__.py –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f "config/__init__.py" ]; then
    echo "üìù –°–æ–∑–¥–∞—é config/__init__.py..."
    echo "# Config package for CartingBot" > config/__init__.py
    echo "‚úÖ –§–∞–π–ª config/__init__.py —Å–æ–∑–¥–∞–Ω"
else
    echo "‚úÖ –§–∞–π–ª config/__init__.py —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–µ–º config/config.py –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f "config/config.py" ]; then
    echo "üìù –°–æ–∑–¥–∞—é config/config.py –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
    
    if [ -f "config/config.py.example" ]; then
        cp config/config.py.example config/config.py
        echo "‚úÖ –§–∞–π–ª config/config.py —Å–æ–∑–¥–∞–Ω"
    else
        echo "‚ùå –§–∞–π–ª config/config.py.example –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
else
    echo "‚úÖ –§–∞–π–ª config/config.py —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª .env
if [ ! -f ".env" ]; then
    echo "üìù –°–æ–∑–¥–∞—é .env –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
    
    if [ -f "env.example" ]; then
        cp env.example .env
        echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
        echo "‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å BOT_TOKEN –≤ —Ñ–∞–π–ª–µ .env"
    else
        echo "‚ùå –§–∞–π–ª env.example –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
else
    echo "‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º BOT_TOKEN –≤ .env
if grep -q "YOUR_BOT_TOKEN_HERE" .env 2>/dev/null; then
    echo "‚ö†Ô∏è  BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ —Ñ–∞–π–ª–µ .env"
    echo "   –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ –∑–∞–º–µ–Ω–∏—Ç–µ YOUR_BOT_TOKEN_HERE –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω"
else
    echo "‚úÖ BOT_TOKEN –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env"
fi

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –°–æ–∑–¥–∞—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
mkdir -p data logs
echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

# –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Docker, –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑
if [ -f "docker-compose.yml" ]; then
    echo ""
    echo "üê≥ –û–±–Ω–∞—Ä—É–∂–µ–Ω Docker Compose —Ñ–∞–π–ª"
    echo "   –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   ./scripts/manage.sh update"
    echo ""
fi

echo "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:"
echo "   –õ–æ–∫–∞–ª—å–Ω–æ: ./run_bot.sh"
echo "   Docker:   ./scripts/manage.sh start" 