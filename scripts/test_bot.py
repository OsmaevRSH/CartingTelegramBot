#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞
"""
import sys
import os
import asyncio

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Python path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from src.parsers.parsers import ArchiveParser
from src.database.db import init_db, get_all_competitors
from src.models.models import ParsingError

async def test_parser():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–µ—Ä –∞—Ä—Ö–∏–≤–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é –ø–∞—Ä—Å–µ—Ä –∞—Ä—Ö–∏–≤–∞...")
    
    try:
        parser = ArchiveParser()
        day_races = await parser.parse()
        
        print(f"‚úÖ –ü–∞—Ä—Å–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! –ù–∞–π–¥–µ–Ω–æ {len(day_races)} –¥–Ω–µ–π —Å –∑–∞–µ–∑–¥–∞–º–∏")
        
        for day_race in day_races[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –¥–Ω—è
            print(f"üìÖ {day_race.date.strftime('%d.%m.%Y')} - {len(day_race.races)} –∑–∞–µ–∑–¥–æ–≤")
            for race in day_race.races[:2]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2 –∑–∞–µ–∑–¥–∞
                print(f"   üèÅ {race.number} ({race.href})")
            
    except ParsingError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

def test_database():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        init_db()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        competitors = get_all_competitors()
        print(f"üìä –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö {len(competitors)} –∑–∞–ø–∏—Å–µ–π")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ CartingBot...")
    
    # –¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞
    await test_parser()
    
    # –¢–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    test_database()
    
    print("\n‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")

if __name__ == "__main__":
    asyncio.run(main()) 