#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º
"""

import os
import sys
import stat
from pathlib import Path

def check_permissions(path, check_write=True):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    try:
        path_obj = Path(path)
        
        if not path_obj.exists():
            return False, f"–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ñ–∞–π–ª–∞
        st = path_obj.stat()
        mode = st.st_mode
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        readable = os.access(path, os.R_OK)
        writable = os.access(path, os.W_OK) if check_write else True
        executable = os.access(path, os.X_OK) if path_obj.is_file() else os.access(path, os.X_OK)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø—Ä–∞–≤–∞ –≤ –≤–∏–¥–µ rwx
        permissions = stat.filemode(mode)
        
        status = "‚úÖ" if (readable and writable and executable) else "‚ùå"
        details = f"{permissions} (R:{readable}, W:{writable}, X:{executable})"
        
        return True, f"{status} {details}"
        
    except Exception as e:
        return False, f"‚ùå –û—à–∏–±–∫–∞: {e}"

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ CartingBot")
    print("=" * 50)
    
    # –°–ø–∏—Å–æ–∫ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    paths_to_check = [
        ("data/", True),
        ("logs/", True),
        ("config/", True),
        ("scripts/", True),
        ("src/", False),
        ("data/races.db", True),
        ("scripts/health_check.py", False),
        ("scripts/manage.sh", False),
        ("scripts/deploy.sh", False),
        ("scripts/clear_database.py", False),
        ("main.py", False),
        ("docker-compose.yml", False),
        ("docker/Dockerfile", False),
        ("docker/entrypoint.sh", False),
    ]
    
    all_ok = True
    
    for path, check_write in paths_to_check:
        exists, status = check_permissions(path, check_write)
        
        if exists:
            print(f"üìÅ {path:<25} {status}")
        else:
            print(f"üìÅ {path:<25} ‚ö†Ô∏è  {status}")
            if path.endswith("/") or path in ["data/races.db"]:
                # –î–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–æ–π
                continue
            all_ok = False
    
    print("\n" + "=" * 50)
    
    if all_ok:
        print("‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã!")
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ —Ñ–∞–π–ª–∞–º!")
        
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    print(f"\nüìä –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {os.getuid()}:{os.getgid()}")
    print(f"üìä –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    
    return 0 if all_ok else 1

if __name__ == "__main__":
    sys.exit(main()) 